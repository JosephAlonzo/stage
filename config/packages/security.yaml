security:
    encoders:
        App\Entity\Security\User:
            algorithm: argon2i
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        users:
            entity: 
                class: 'App\Entity\Security\User'
                property: 'username'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: users_in_memory
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                target: /
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/users|tenant, roles: ROLE_ADVENSYS }
        - { path: ^/activities|cities|social_workers|educators|structures|holidays|plannings, roles: ROLE_MANAGER }
        - { path: ^/orientation_sheets, roles: ROLE_SOCIAL_WORKER }
        - { path: ^/attendance_sheets, roles: ROLE_EDUCATOR }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: [ROLE_USER, ROLE_SOCIAL_WORKER] }
