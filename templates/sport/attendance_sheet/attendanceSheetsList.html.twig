{% extends 'base.html.twig' %}
{% set entity = 'attendance_sheet' %}

{% block title %}{{ parent() }} - {{ 'entity.general.crud.html.title_read' |trans}} {{ ('entity.'~entity~'.plural') |trans}} {% endblock %}

{% block css %}
    {{parent()}}
    tfoot {
      display: table-header-group; 
    }
{% endblock %}

{% block body %}

<div class="d-flex justify-content-between flex-wrap mt-3">
    <div class="d-flex align-items-end flex-wrap">
        <div class="mr-md-3 mr-xl-5">
            <h2>{{ 'entity.general.crud.read' |trans}} {{ ('entity.'~entity~'.plural') |trans}}</h2>
        </div>
    </div>
</div>
{# <div class="d-flex justify-content-between flex-wrap mt-3">
    <div class="d-flex align-items-end flex-wrap">
        <div class="mr-md-3 mr-xl-5">
            <a href="{{ path('edit_'~entity) }}" class="btn btn-primary">{{ 'button.add' |trans}} {{ ('entity.'~entity~'.article') |trans}} {{ ('entity.'~entity~'.singular') |trans}}</a>
        </div>
    </div>
</div> #}

<div class="row mt-2">
    <div class="col-sm-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <table class="table table-hover table-bordered table-striped table-sm datatables" id="attendanceSheetsList" data-pathlanguage="{{ path('datatables_lang') }}" data-pathroute="{{ path('attendance_sheets_datatables_list') }}">
                    {% for tag_name in ['thead', 'tfoot'] %}
                    <{{tag_name}}>
                        <tr class="text-center text-blue-dark">
                            <th>planning</th>
                            <th>{{ ('entity.'~entity~'.table.activity') |trans}}</th>
                            <th>{{ ('entity.'~entity~'.table.startDate') |trans}}</th>
                            <th>{{ ('entity.'~entity~'.table.cycle')|trans}}</th>
                            <th>{{ ('entity.'~entity~'.table.numberSessions') |trans}}</th>
                            <th>{{ 'entity.general.table.actions' |trans}}</th>
                        </tr>
                    </{{tag_name}}>
                    {% endfor %}
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    {% include("_modalDelete.html.twig") %}
</div>

<table class="table table-hover table-bordered table-striped table-sm datatables d-none" id="clon_attendance_sheets" data-pathlanguage="{{ path('datatables_lang') }}" data-pathroute="{{ path('attendance_sheets_datatables_list_details') }}">
    {% for tag_name in ['thead', 'tfoot'] %}
    <{{tag_name}}>
        <tr class="text-center text-blue-dark">
            <th>{{ ('entity.'~entity~'.table.lastName') |trans}}</th>
            <th>{{ ('entity.'~entity~'.table.firstName')|trans}}</th>
            <th>{{ ('entity.'~entity~'.table.axe')|trans}}</th>
        </tr>
    </{{tag_name}}>
    {% endfor %}
    <tbody>
    </tbody>
</table>

<div>
    <div class="col-sm-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body new-table">
               
            </div>
        </div>
    </div>
</div>

{% endblock %}

{% block javascripts %}
	{{parent()}}
	{{ encore_entry_script_tags('attendanceSheetsList') }}
    <script>
		jQuery(document).ready(function() {
             //export excel de toutes les lignes
            var oldExportAction = function (self, e, dt, button, config) {
                if (button[0].className.indexOf('buttons-excel') >= 0) {
                    if ($.fn.dataTable.ext.buttons.excelHtml5.available(dt, config)) {
                        $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config);
                    }
                    else {
                        $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
                    }
                } else if (button[0].className.indexOf('buttons-print') >= 0) {
                    $.fn.dataTable.ext.buttons.print.action(e, dt, button, config);
                }
            };

            var newExportAction = function (e, dt, button, config) {
                var self = this;
                var oldStart = dt.settings()[0]._iDisplayStart;
                dt.one('preXhr', function (e, s, data) {
                    //Just this once, load all data from the server...
                    data.start = 0;
                    data.length = 2147483647;
                    dt.one('preDraw', function (e, settings) {
                        //Call the original action function 
                        oldExportAction(self, e, dt, button, config);
                        dt.one('preXhr', function (e, s, data) {
                            //DataTables thinks the first item displayed is index 0, but we're not drawing that.
                            //Set the property to what it was before exporting.
                            settings._iDisplayStart = oldStart;
                            data.start = oldStart;
                        });
                    //Reload the grid with the original page. Otherwise, API functions like table.cell(this) don't work properly.
                    setTimeout(dt.ajax.reload, 0);
                    //Prevent rendering of the full data to the DOM
                    return false;
                    });
                });
                //Requery the server with the new one-time export settings
                dt.ajax.reload();
            };
            
            $('body').on('click','#updateTable',function(){
                let td = $(this).parents().eq(1);
                let numberSessions = td.children()[4]['innerText'];
                let planning = td.children()[0]['innerText'];
                $( ".card-body.new-table" ).empty();    
                let clon = $( "#clon_attendance_sheets" ).clone()
                clon.prop('id', 'attendanceSheetsListSecond' )
                clon.removeClass("d-none").appendTo( ".card-body.new-table" );
                
                $("attendanceSheetsListSecond tfoot").each(function() {
                    $(this).children("th:eq(2)").remove();
                });

                $('#attendanceSheetsListSecond tfoot').find('tr').each(function(){
                    for(var i = 0; i < numberSessions; i++) {
                        $(this).find('th').eq( 2 ).after('<td>S' + (numberSessions - i) +'</td>');
                    }
                });

                $('#attendanceSheetsListSecond thead').find('tr').each(function(){
                    for(var i = 0; i < numberSessions; i++) {
                        $(this).find('th').eq( 2 ).after('<td>S' + (numberSessions - i) +'</td>');
                    }
                });

                updateTable(numberSessions, planning)
            });   


            function updateTable(numberSessions, planning){
                
                $('#attendanceSheetsListSecond tfoot th').each( function (k, v) {
                    var title = $(this).text();
                    if (title != "Actions")
                    {
                        $(this).html( '<input class="form-control input-sm" type="text" placeholder="'+title+'" data-column="'+k+'"/>' );
                    }
                    else
                    {
                        $(this).html('');
                    }
                } );

                let columnsDefsArray = [];
                columnsDefsArray.push({ "name": "lastName",  "targets": 0 });
                columnsDefsArray.push({ "name": "firstName",   "targets": 1 });
                columnsDefsArray.push({ "name": "axe",   "targets": 2 });
                for(var i = 0; i < numberSessions; i++) {
                    columnsDefsArray.push({ "name": "S"+i ,   "targets": 2 + i });
                }
            
                var table = $('#attendanceSheetsListSecond').DataTable({
                    responsive: true,
                    dom: 'Bfrtip',
                    columnDefs: columnsDefsArray,
                    processing: true,
                    serverSide: true,
                    ajax: {
                        "url": $('#attendanceSheetsListSecond').data('pathroute'),
                        "type": "POST",
                        "data": { planningId: planning }
                    },
                    stateSave: true,
                    initComplete: function () 
                    {
                        var api = this.api();

                        var state = api.state.loaded();
                        api.buttons().container().appendTo('#attendanceSheetsListSecond .col-md-6:eq(0)');

                        // Apply the search
                        api.columns().every( function () {
                            var that = this;
                            
                            $( 'input', this.footer() ).on( 'keyup change', function () {
                                if ( that.search() !== this.value ) {
                                    that
                                        .search( this.value )
                                        .draw();
                                }
                            } );
                        } );

                        if (state !== null)
                        {
                            state.columns.forEach(function (v, k) {
                                $('input[data-column='+k+'], select[data-column='+k+']').val(v.search.search);
                            });
                        }

                        $('a[data-modal="modal"]').click(function(ev){
                            ev.preventDefault();
                            
                            var target_modal = ev.currentTarget.dataset.targetModal;

                            $(target_modal).modal('toggle');
                            $(target_modal+' a[data-valid-button="submit"]').attr('href', ev.currentTarget.href);
                            
                        });
                    },
                    order: [[ 0, "asc"]],
                    pagingType: "full_numbers",
                    lengthMenu: [ [10, 15, 20, -1], [10, 15, 20 ,  "Tous"] ], 
                    lengthChange: false,
                    language: {
                        "url": $('#attendanceSheetsListSecond').data('pathlanguage')
                    },
                    buttons: [
                        { 
                            extend: 'pageLength',
                            className: "btn btn-light",
                        },
                        {
                            extend: 'excel',
                            text: '<i class="fas fa-file-excel text-success"></i>',
                            className: "btn btn-light btn-outline-success",
                            action: newExportAction,
                            customize: function(xlsx) 
                            {
                                var sheet = xlsx.xl.worksheets['sheet1.xml'];
                                // Loop over the cells
                                $('row c', sheet).each(function() {
                                    //select the index of the row
                                    var index =$(this).parent().index() ;
                                    if (index==1){           
                                        $(this).attr('s','22');//22 - Bold, blue background
                                    }else if (index>1){
                                        let text = $(this).text();
                                        //information about styles https://datatables.net/reference/button/excelHtml5
                                        if( text == 'x'){
                                            $(this).attr('s','17'); //White text, green background
                                        }
                                        else if ( text == 'Absence') {
                                            $(this).attr('s','12'); //White text, red background
                                        }
                                    }
                                });
                            }
                        }
                    ],
                    createdRow: function( row, data, dataIndex ) {
                        $(row).find("td").css("white-space", "normal");
                    }
                });
            }

            $(document).on('change', '.attendances', function(ev) {
                let input = $(this)
                sendAttendances(input)
            });

            function sendAttendances(input){
                let id = input.data("id")
                let idP = input.data("idP")
                let index = input.data("index")
                let value = input.prop('checked')
                if(value == true){
                    value = "x"
                }
                else{
                    value = "Absence"
                }
                $.ajax({
                        url: "/attendance_sheets/edit/"+id,
                        type: "POST",
                        data: { index: index, value: value }
                    })
                    .done(function() {
                        $("#"+idP).html(value)
                });
            }
		});

        
	</script>
{% endblock %}
